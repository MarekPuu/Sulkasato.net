---
import type { NewsItem } from "../../types";
import NewsCard from "../common/NewsCard.astro";
import { fetchNews } from "../../lib/api/news";
// await new Promise((res) => setTimeout(res, 3000));

let news = [] as NewsItem[];
let fetchingError: string | null = null;

try {
  news = await fetchNews({ sort: "-date_created" });
} catch (error) {
  fetchingError = "Uutisten lataaminen epäonnistui. Yritä myöhemmin uudelleen.";
  console.error("Error fetching news:", error);
}
---

{
  fetchingError ? (
    <div class="text-center text-lg py-12">{fetchingError}</div>
  ) : news.length === 0 ? (
    <div class="text-center text-gray-600 text-lg py-12 italic">
      Ei postauksia vielä.
    </div>
  ) : (
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
      {news.map((item, index) => (
        <NewsCard key={index} {...item} image_source={item?.image_source}>
          {item.Content}
        </NewsCard>
      ))}
    </div>
  )
}
